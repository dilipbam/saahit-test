"""Automatic migration

Revision ID: 7a8e73063c48
Revises: 
Create Date: 2024-06-17 15:29:53.290810

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '7a8e73063c48'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('catering_package',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('package_name', sa.String(), nullable=True),
    sa.Column('price', sa.Numeric(), nullable=True),
    sa.Column('type', sa.String(), nullable=True),
    sa.Column('variety_qty', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('consumer_activity_log',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('level', sa.String(), nullable=True),
    sa.Column('message', sa.String(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('invoice',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_name', sa.String(), nullable=True),
    sa.Column('issued_date', sa.DateTime(), nullable=True),
    sa.Column('total_price', sa.DECIMAL(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user_type',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('type_name', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('vendor_activity_log',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('level', sa.String(), nullable=True),
    sa.Column('message', sa.String(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('vendor_industry',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('industry_name', sa.String(), nullable=False),
    sa.Column('additional_fields', sa.JSON(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('venue_types',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('subscription',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('subscription_name', sa.String(), nullable=False),
    sa.Column('num_images_allowed', sa.Integer(), nullable=False),
    sa.Column('sub_price', sa.Numeric(), nullable=False),
    sa.Column('features_incl', sa.String(), nullable=False),
    sa.Column('billing_cycle', sa.String(), nullable=False),
    sa.Column('sub_duration', sa.String(), nullable=False),
    sa.Column('sub_category', sa.String(), nullable=True),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('industry_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['industry_id'], ['vendor_industry.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_subscription_industry_id'), 'subscription', ['industry_id'], unique=False)
    op.create_table('users',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('fullname', sa.String(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('password', sa.String(), nullable=False),
    sa.Column('phone_number', sa.String(), nullable=True),
    sa.Column('is_verified', sa.Boolean(), nullable=True),
    sa.Column('verification_code', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('user_type_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['user_type_id'], ['user_type.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email')
    )
    op.create_table('album',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('album_name', sa.String(), nullable=False),
    sa.Column('num_image', sa.Integer(), nullable=True),
    sa.Column('album_type', sa.String(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('consumer_profile',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('image', sa.String(), nullable=True),
    sa.Column('gender', sa.String(), nullable=True),
    sa.Column('last_updated', sa.Date(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_consumer_profile_last_updated'), 'consumer_profile', ['last_updated'], unique=False)
    op.create_index(op.f('ix_consumer_profile_user_id'), 'consumer_profile', ['user_id'], unique=True)
    op.create_table('user_logs',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('action_performed', sa.String(), nullable=True),
    sa.Column('action_time', sa.DateTime(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_logs_user_id'), 'user_logs', ['user_id'], unique=False)
    op.create_table('vendor_dynamic_form',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('form_name', sa.String(), nullable=True),
    sa.Column('schema', sa.JSON(), nullable=True),
    sa.Column('vendor_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['vendor_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('vendor_profile',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('vendor_type', sa.String(), nullable=True),
    sa.Column('industry_id', sa.Integer(), nullable=False),
    sa.Column('estd_date', sa.Date(), nullable=True),
    sa.Column('location', sa.String(), nullable=True),
    sa.Column('profile_image', sa.String(), nullable=True),
    sa.Column('pan_number', sa.String(), nullable=True),
    sa.Column('pan_image', sa.String(), nullable=True),
    sa.Column('pan_holder_citizenship', sa.String(), nullable=True),
    sa.Column('pan_holder_photo', sa.String(), nullable=True),
    sa.Column('last_updated', sa.Date(), nullable=True),
    sa.Column('is_sa_verified', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['industry_id'], ['vendor_industry.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('pan_number'),
    sa.UniqueConstraint('user_id')
    )
    op.create_index(op.f('ix_vendor_profile_industry_id'), 'vendor_profile', ['industry_id'], unique=False)
    op.create_table('food_items',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('item_name', sa.String(), nullable=True),
    sa.Column('item_price', sa.Numeric(), nullable=True),
    sa.Column('item_description', sa.String(), nullable=True),
    sa.Column('type', sa.String(), nullable=True),
    sa.Column('vendor_profile_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['vendor_profile_id'], ['vendor_profile.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('image',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('url', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('album_id', sa.Integer(), nullable=True),
    sa.Column('image_type', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['album_id'], ['album.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('menu',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('cuisine', sa.String(), nullable=True),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('rate', sa.Numeric(), nullable=True),
    sa.Column('no_of_items', sa.Numeric(), nullable=True),
    sa.Column('vendor_profile_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['vendor_profile_id'], ['vendor_profile.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('vendor_subscription',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('subscription_id', sa.Integer(), nullable=False),
    sa.Column('vendor_id', sa.Integer(), nullable=False),
    sa.Column('start_date', sa.DateTime(), nullable=False),
    sa.Column('end_date', sa.DateTime(), nullable=False),
    sa.Column('billing_status', sa.String(), nullable=False),
    sa.Column('active_status', sa.String(), nullable=False),
    sa.Column('exceptions', sa.JSON(), nullable=True),
    sa.Column('addn_rates', sa.JSON(), nullable=True),
    sa.Column('approved_on', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['subscription_id'], ['subscription.id'], ),
    sa.ForeignKeyConstraint(['vendor_id'], ['vendor_profile.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_vendor_subscription_subscription_id'), 'vendor_subscription', ['subscription_id'], unique=False)
    op.create_index(op.f('ix_vendor_subscription_vendor_id'), 'vendor_subscription', ['vendor_id'], unique=False)
    op.create_table('venues',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('venue_name', sa.String(), nullable=True),
    sa.Column('location', sa.String(), nullable=True),
    sa.Column('mandatory_catering', sa.Boolean(), nullable=True),
    sa.Column('venue_type', sa.String(), nullable=True),
    sa.Column('parking_capacity', sa.Integer(), nullable=True),
    sa.Column('industry_id', sa.Integer(), nullable=False),
    sa.Column('vendor_profile_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['industry_id'], ['vendor_industry.id'], ),
    sa.ForeignKeyConstraint(['vendor_profile_id'], ['vendor_profile.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('menu_food_items',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('item_id', sa.Integer(), nullable=False),
    sa.Column('menu_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['item_id'], ['food_items.id'], ),
    sa.ForeignKeyConstraint(['menu_id'], ['menu.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('spaces',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('space_name', sa.String(), nullable=True),
    sa.Column('space_type', sa.String(), nullable=True),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('rate', sa.Numeric(), nullable=True),
    sa.Column('type_of_charge', sa.String(), nullable=True),
    sa.Column('seating_capacity', sa.Integer(), nullable=True),
    sa.Column('floating_capacity', sa.Integer(), nullable=True),
    sa.Column('venue_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['venue_id'], ['venues.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('schedule',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('schedule', sa.JSON(), nullable=True),
    sa.Column('vendor_profile_id', sa.Integer(), nullable=False),
    sa.Column('space_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['space_id'], ['spaces.id'], ),
    sa.ForeignKeyConstraint(['vendor_profile_id'], ['vendor_profile.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('shifts',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('shift_name', sa.String(), nullable=True),
    sa.Column('shift_time', sa.Time(), nullable=True),
    sa.Column('booking_capacity', sa.Integer(), nullable=True),
    sa.Column('vendor_profile_id', sa.Integer(), nullable=False),
    sa.Column('space_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['space_id'], ['spaces.id'], ),
    sa.ForeignKeyConstraint(['vendor_profile_id'], ['vendor_profile.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('venue_bookings',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('booked_date', sa.DateTime(), nullable=True),
    sa.Column('booked_quantity', sa.Integer(), nullable=True),
    sa.Column('status', sa.String(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('space_id', sa.Integer(), nullable=False),
    sa.Column('menu_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['menu_id'], ['menu.id'], ),
    sa.ForeignKeyConstraint(['space_id'], ['spaces.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('availability',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('date', sa.Date(), nullable=True),
    sa.Column('status', sa.String(), nullable=True),
    sa.Column('shift_id', sa.Integer(), nullable=False),
    sa.Column('vendor_profile_id', sa.Integer(), nullable=False),
    sa.Column('space_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['shift_id'], ['shifts.id'], ),
    sa.ForeignKeyConstraint(['space_id'], ['spaces.id'], ),
    sa.ForeignKeyConstraint(['vendor_profile_id'], ['vendor_profile.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('availability')
    op.drop_table('venue_bookings')
    op.drop_table('shifts')
    op.drop_table('schedule')
    op.drop_table('spaces')
    op.drop_table('menu_food_items')
    op.drop_table('venues')
    op.drop_index(op.f('ix_vendor_subscription_vendor_id'), table_name='vendor_subscription')
    op.drop_index(op.f('ix_vendor_subscription_subscription_id'), table_name='vendor_subscription')
    op.drop_table('vendor_subscription')
    op.drop_table('menu')
    op.drop_table('image')
    op.drop_table('food_items')
    op.drop_index(op.f('ix_vendor_profile_industry_id'), table_name='vendor_profile')
    op.drop_table('vendor_profile')
    op.drop_table('vendor_dynamic_form')
    op.drop_index(op.f('ix_user_logs_user_id'), table_name='user_logs')
    op.drop_table('user_logs')
    op.drop_index(op.f('ix_consumer_profile_user_id'), table_name='consumer_profile')
    op.drop_index(op.f('ix_consumer_profile_last_updated'), table_name='consumer_profile')
    op.drop_table('consumer_profile')
    op.drop_table('album')
    op.drop_table('users')
    op.drop_index(op.f('ix_subscription_industry_id'), table_name='subscription')
    op.drop_table('subscription')
    op.drop_table('venue_types')
    op.drop_table('vendor_industry')
    op.drop_table('vendor_activity_log')
    op.drop_table('user_type')
    op.drop_table('invoice')
    op.drop_table('consumer_activity_log')
    op.drop_table('catering_package')
    # ### end Alembic commands ###
